# Generated by Django 4.2.21 on 2025-06-02 11:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('spatial_data', '0018_rename_company_name_competitor_agency_name'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='commune',
            options={'verbose_name': 'Commune', 'verbose_name_plural': 'Communes'},
        ),
        migrations.AlterModelOptions(
            name='coveragescore',
            options={'ordering': ['-calculation_date']},
        ),
        migrations.AlterModelOptions(
            name='lossratio',
            options={'verbose_name_plural': 'Loss Ratios'},
        ),
        migrations.AlterModelOptions(
            name='province',
            options={'verbose_name': 'Province', 'verbose_name_plural': 'Provinces'},
        ),
        migrations.AlterUniqueTogether(
            name='coveragescore',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='coveragestats',
            name='bank_mean',
        ),
        migrations.RemoveField(
            model_name='coveragestats',
            name='bank_std',
        ),
        migrations.RemoveField(
            model_name='coveragestats',
            name='calc_date',
        ),
        migrations.RemoveField(
            model_name='coveragestats',
            name='comp_mean',
        ),
        migrations.RemoveField(
            model_name='coveragestats',
            name='comp_std',
        ),
        migrations.AddField(
            model_name='area',
            name='population_density',
            field=models.FloatField(blank=True, editable=False, help_text='Population per square kilometer', null=True),
        ),
        migrations.AddField(
            model_name='area',
            name='vehicle_density',
            field=models.FloatField(blank=True, editable=False, help_text='Vehicles per square kilometer', null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='accessibility_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='competition_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='demand_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='economic_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='risk_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragescore',
            name='travel_time_to_centroid_minutes',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='area_type',
            field=models.CharField(choices=[('Commune', 'Commune'), ('Province', 'Province')], default='Commune', max_length=20),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='bank_intensity_mean',
            field=models.FloatField(default=0.0, verbose_name='Bank Intensity Mean'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='bank_intensity_std',
            field=models.FloatField(default=0.0, verbose_name='Bank Intensity Std Dev'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='calculation_date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='When these stats were computed'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='comp_intensity_mean',
            field=models.FloatField(default=0.0, verbose_name='Competition Intensity Mean'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='comp_intensity_std',
            field=models.FloatField(default=0.0, verbose_name='Competition Intensity Std Dev'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='loss_ratio_mean',
            field=models.FloatField(default=0.0, verbose_name='Loss Ratio Mean'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='loss_ratio_std',
            field=models.FloatField(default=0.0, verbose_name='Loss Ratio Std Dev'),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='market_potential_mean',
            field=models.FloatField(blank=True, default=0.0, null=True),
        ),
        migrations.AddField(
            model_name='coveragestats',
            name='market_potential_std',
            field=models.FloatField(blank=True, default=0.0, null=True),
        ),
        migrations.AddField(
            model_name='lossratio',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lossratio_records', to='spatial_data.area'),
        ),
        migrations.AlterField(
            model_name='area',
            name='bank_count',
            field=models.IntegerField(default=0, editable=False, help_text='Number of bank branches in the area'),
        ),
        migrations.AlterField(
            model_name='area',
            name='bank_intensity',
            field=models.FloatField(default=0.0, editable=False, help_text='Banks per 10k population or similar metric'),
        ),
        migrations.AlterField(
            model_name='area',
            name='competition_count',
            field=models.IntegerField(default=0, editable=False, help_text='Number of competitor branches in the area'),
        ),
        migrations.AlterField(
            model_name='area',
            name='competition_intensity',
            field=models.FloatField(default=0.0, editable=False, help_text='Competitors per 10k population or similar metric'),
        ),
        migrations.AlterField(
            model_name='area',
            name='estimated_vehicles',
            field=models.IntegerField(default=0, editable=False, help_text='Estimated number of vehicles'),
        ),
        migrations.AlterField(
            model_name='area',
            name='insured_population',
            field=models.IntegerField(default=0, editable=False, help_text='Estimated insured population'),
        ),
        migrations.AlterField(
            model_name='area',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='area',
            name='population',
            field=models.IntegerField(help_text='Total population in the area'),
        ),
        migrations.AlterField(
            model_name='competitor',
            name='competitor_type',
            field=models.CharField(choices=[('AGENT', 'Agent'), ('BGD', 'BGD'), ('COURTIER', 'Courtier/Broker')], max_length=50),
        ),
        migrations.AlterField(
            model_name='coveragescore',
            name='area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_scores_history', to='spatial_data.area'),
        ),
        migrations.AlterField(
            model_name='coveragescore',
            name='calculation_date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp of when this score was calculated'),
        ),
        migrations.AlterField(
            model_name='coveragescore',
            name='potential',
            field=models.CharField(choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], help_text='Categorized potential based on score', max_length=50),
        ),
        migrations.AlterField(
            model_name='coveragescore',
            name='score',
            field=models.FloatField(help_text='Overall suitability score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='lossratio',
            name='RMA_office',
            field=models.ForeignKey(blank=True, help_text='RMA Office this LR is associated with', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lossratios', to='spatial_data.rmaoffice'),
        ),
        migrations.AlterField(
            model_name='lossratio',
            name='commune',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commune_lossratios', to='spatial_data.commune'),
        ),
        migrations.AlterField(
            model_name='lossratio',
            name='loss_ratio',
            field=models.FloatField(default=0.0, help_text='Loss Ratio (e.g., 0.65 for 65%)', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='lossratio',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='province_lossratios', to='spatial_data.province'),
        ),
    ]
