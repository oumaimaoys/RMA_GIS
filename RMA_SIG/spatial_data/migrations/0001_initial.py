# Generated by Django 4.2.20 on 2025-04-21 11:10

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bank_id', models.CharField(max_length=50, unique=True)),
                ('institution_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code_ACAPS', models.CharField(max_length=50, unique=True)),
                ('company_name', models.CharField(max_length=255)),
                ('mandante', models.CharField(max_length=255)),
                ('competitor_type', models.CharField(choices=[('AGENT', 'agent'), ('BGD', 'bgd'), ('COURTIER', 'courtier')], max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PopulationArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('total_population', models.IntegerField()),
                ('total_vihicules', models.IntegerField()),
                ('date_updated', models.DateField(help_text='Date this population data was updated')),
            ],
        ),
        migrations.CreateModel(
            name='RMAOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code_ACAPS', models.CharField(max_length=50, unique=True)),
                ('code_RMA', models.CharField(max_length=50, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('code_tel', models.IntegerField()),
                ('tel', models.IntegerField()),
                ('tel_GSM', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RMAAgent',
            fields=[
                ('rmaoffice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='spatial_data.rmaoffice')),
            ],
            options={
                'abstract': False,
            },
            bases=('spatial_data.rmaoffice',),
        ),
        migrations.CreateModel(
            name='RMABGD',
            fields=[
                ('rmaoffice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='spatial_data.rmaoffice')),
                ('type_BGD', models.CharField(choices=[('CLASSIQUE', 'classique'), ('NOUVEAU_MODELE', 'nouveau_modele'), ('TREMPLEIN', 'tremplein'), ('PARTENAIRE', 'partenaire')], max_length=50)),
                ('Partenaire', models.CharField(max_length=50)),
                ('date_creation', models.DateField()),
                ('RMA_BGD_state', models.CharField(choices=[('ACTIF', 'actif'), ('INACTIF', 'inactif')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
            bases=('spatial_data.rmaoffice',),
        ),
        migrations.CreateModel(
            name='CoverageScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Coverage score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_covered', models.IntegerField(help_text='Estimated population covered by RMA network')),
                ('coverage_percentage', models.FloatField(help_text='Percentage of population covered', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('competitor_factor', models.FloatField(default=0, help_text='Impact of competitors on the score (-10 to +10)', validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(10)])),
                ('bank_partnership_factor', models.FloatField(default=0, help_text='Impact of bank partnerships on the score (0 to +20)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_scores', to='spatial_data.populationarea')),
                ('nearest_office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_coverage_areas', to='spatial_data.rmaoffice')),
            ],
            options={
                'unique_together': {('area', 'calculation_date')},
            },
        ),
    ]
